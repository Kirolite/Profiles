#default configure
#Update Date: 2021-02-12 00:22:05 +0000
#author: Sunert

[General]
resource-parser = https://cdn.jsdelivr.net/gh/Peng-YM/Sub-Store@master/scripts/sub-store-parser.js
ipv6 = false
skip-proxy = 192.168.0.0/16,10.0.0.0/8,172.16.0.0/12,localhost,*.local,e.crashlynatics.com
bypass-tun = 10.0.0.0/8,100.64.0.0/10,127.0.0.0/8,169.254.0.0/16,172.16.0.0/12,192.0.0.0/24,192.0.2.0/24,192.88.99.0/24,192.168.0.0/16,198.18.0.0/15,198.51.100.0/24,203.0.113.0/24,224.0.0.0/4,255.255.255.255/32
# [DNS] => DNS 服务器
dns-server = system,119.29.29.29,223.5.5.5
allow-udp-proxy = false
allow-wifi-access = false
wifi-access-http-port = 7222
wifi-access-socket5-port = 7221
proxy-test-url = http://www.gstatic.com/generate_204
test-timeout = 3

[Proxy]
# 内置 DIRECT、REJECT 策略
# 节点名称 = 协议，服务器地址，服务器端口，加密协议，密码，
# 1 = Shadowsocks, 1.2.3.4, 443, aes-128-gcm, ”password“
# 2 = Shadowsocks, 1.2.3.4, 443, aes-128-gcm, ”password“
# 3 = ShadowsocksR, 1.2.3.4, 443, aes-256-cfb,”password“,auth_aes128_md5,{},tls1.2_ticket_auth,{}
# 4 = ShadowsocksR, 1.2.3.4, 10076, aes-128-cfb,”password“,auth_aes128_md5,{},tls1.2_ticket_auth,{}
# 5 = http, 1.2.3.4, 443, username, ”password“
# vmess
# 节点名称 = 协议，服务器地址，端口，加密方式，UUID，传输方式:(tcp/ws),path：websocket握手header中的path，host：websocket握手header中的path，over-tls:是否tls，tls-name：tls名字，skip-cert-verify：是否跳过证书校验（默认否）
# 6 = vmess, 1.2.3.4, 10086, aes-128-gcm,”uuid“,transport:ws,path:/,host:icloud.com,over-tls:true,tls-name:youtTlsServerName.com,skip-cert-verify:false
#trojan
#节点名称 = 协议，服务器地址，端口，密码，tls-name：tls名字，skip-cert-verify：是否跳过证书校验（默认否）
# 7 = trojan, 1.2.3.4, 443,password,tls-name:youtTlsServerName.com,skip-cert-verify:false

[Remote Proxy]

# 订阅节点
# 别名 = 订阅URL
网易云音乐 = https://git.io/JfNq3
IKuuu = https://api.ikuuu.science/,parser-enable = true

[Remote Filter]
日本🇯🇵 = NameKeyword,IKuuu, FilterKey = ”日本“
香港🇭🇰 = NameKeyword,IKuuu, FilterKey = ”香港“
# 筛选订阅节点，筛选后的结果可加入到策略组中，目前支持三种筛选方式
# NodeSelect: 使用在UI上选择的节点。
# NameKeyword: 根据提供的关键词对订阅中所有节点的名称进行筛选，使用筛选后的节点。
# NameRegex: 根据提供的正则表达式对订阅中所有节点的名称进行筛选，使用筛选后的节点。

[Proxy Group]
网络测速 = select,全局代理,DIRECT
网飞视频 = select,全局代理
YouTube = select,全局代理
电报信息 = select,香港🇭🇰,全局代理
国际影视 = select,全局代理
国际网站 = select,DIRECT,全局代理
国内媒体 = select,DIRECT
中国网站 = select,DIRECT
# 节点选项
全局代理 = select,日本🇯🇵,香港🇭🇰
# url-test模式，给提供的url发出http header请求，根据返回结果，选择测速最快的节点，默认间隔600s，测速超时时间5s，为了避免资源浪费，建议节点数不要过多，只支持单个节点和远端节点，其他会被忽略
#Auto = url-test,Subs,url = http://bing.com/,interval = 600
# fallback模式，和url-test类似，不同的是会根据顺序返回第一个可用的节点，为了避免资源浪费，建议节点数不要过多，只支持单个节点和远端节点，其他会被忽略
#Auto1 = fallback,Subs,url = http://bing.com/,interval = 600,max-timeout = 3000
# 别名 = ssid，默认 = 策略， 蜂窝 = 策略， ssid名称 = 策略
#SSID = ssid,default = PROXY, cellular = DIRECT, ”DivineEngine“ = PROXY
#负载均衡，可选三种算法：random：随机选择策略组可用节点，round-robin：轮询策略组可用节点，pcc：在random基础上，针对相同host使用同一节点，此处url用来测试节点可用性，每隔interval进行一次测速，max-timeout参数用于筛选测试时间超过max-timeout的节点为不可用节点
#LoadBalance = load-balance,node1,node2,remoteNodes,url = http://bing.com,interval = 600,max-timeout = 3000,algorithm = pcc
# 广告模式
屏蔽广告 = select,REJECT,DIRECT
# 白名单模式 PROXY，黑名单模式 DIRECT
最后 = select,全局代理,DIRECT

[Rule]
# Local RULE
# Type:DOMAIN-SUFFIX,DOMAIN,DOMAIN-KEYWORD,USER-AGENT,URL-REGEX,IP-CIDR
# Strategy:DIRECT,Proxy,REJECT
# Options:force-remote-dns(Default:false),no-resolve
IP-CIDR,10.0.0.0/8,DIRECT
IP-CIDR,127.0.0.0/8,DIRECT
IP-CIDR,172.16.0.0/12,DIRECT
IP-CIDR,192.168.0.0/16,DIRECT
IP-CIDR,224.0.0.0/24,DIRECT
DOMAIN,google.com,PROXY
# GeoIP China
GEOIP,CN,DIRECT
FINAL,最后

[Remote Rule]
https://cdn.jsdelivr.net/gh/DivineEngine/Profiles@master/Surge/Ruleset/Extra/Telegram/Telegram.list, policy=电报信息, tag=电报信息, enabled=true

https://cdn.jsdelivr.net/gh/DivineEngine/Profiles@master/Surge/Ruleset/StreamingMedia/Music/Spotify.list, policy=DIRECT, tag=声田音乐, enabled=true

https://cdn.jsdelivr.net/gh/DivineEngine/Profiles@master/Surge/Ruleset/StreamingMedia/Video/Netflix.list, policy=PROXY, tag=网飞视频, enabled=true

https://cdn.jsdelivr.net/gh/DivineEngine/Profiles@master/Surge/Ruleset/StreamingMedia/Video/YouTube.list, policy=PROXY, tag=YouTube, enabled=true

https://gitee.com/Sunert/Profiles/raw/master/Surge/Rules/Oneself/Speedtest.list, policy=网络测速, tag=网络测速, enabled=true

https://cdn.jsdelivr.net/gh/DivineEngine/Profiles@master/Surge/Ruleset/Extra/ChinaIP.list, policy=中国网站, tag=中国IP, enabled=true

https://cdn.jsdelivr.net/gh/DivineEngine/Profiles@master/Surge/Ruleset/StreamingMedia/StreamingCN.list, policy=国内媒体, tag=国内媒体, enabled=true

https://cdn.jsdelivr.net/gh/DivineEngine/Profiles@master/Surge/Ruleset/Global.list, policy=国际网站, tag=国际代理, enabled=true

https://cdn.jsdelivr.net/gh/DivineEngine/Profiles@master/Surge/Ruleset/China.list, policy=中国网站, tag=中国网站, enabled=true

https://cdn.jsdelivr.net/gh/DivineEngine/Profiles@master/Surge/Ruleset/Guard/Privacy.list, policy=REJECT, tag=隐私数据, enabled=true

https://cdn.jsdelivr.net/gh/DivineEngine/Profiles@master/Surge/Ruleset/Guard/Hijacking.list, policy=REJECT, tag=运行商劫持, enabled=true

# Remote Rule
# 订阅规则URL,策略
# PROXY
https://cdn.jsdelivr.net/gh/DivineEngine/Profiles@master/Surge/Ruleset/Guard/Advertising.list, policy=屏蔽广告, tag=屏蔽广告, enabled=true

[URL Rewrite]
enable = true

https:\/\/raw\.githubusercontent\.com\/(\w+)\/(\w+)\/ https://cdn.jsdelivr.net/gh/$1/$2@ 302

# Redirect Google Search Service
^https?:\/\/(www.)?(g|google)\.cn https://www.google.com 302

[Remote Rewrite]
https://cdn.jsdelivr.net/gh/Tartarus2014/Loon-Script@master/Plugin/General.plugin, tag=常规重写, enabled=true
https://cdn.jsdelivr.net/gh/eHpo1/Rules@master/Loon/Rewrite.conf, tag=eHpo, enabled=true
# 订阅 URL Rewrite
# 订阅url,别名(可选)
https://cdn.jsdelivr.net/gh/Loon0x00/LoonExampleConfig/@master/Rewrite/AutoRewrite_Example.list, tag=auto, enabled=true

[Script]
enable = true
# http-request 处理请求的脚本
# http-response 处理请求响应的脚本
# cron 定时脚本
# network-changed   网络发生变化触发脚本

# http-request ^https?:\/\/(www.)?(example)\.com script-path=localscript.js,tag = requestScript,enable=true
# http-response ^https?:\/\/(www.)?(example)\.com script-path=https://example.com/loon.js,timeout=10,requires-body = true,tag = responseScript,enable=true
# cron ”0 8 * * *“ script-path=cron.js,tag = responseScript,enable=true

#network-changed script-path=https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Script/netChanged.js, tag=changeModel

[Remote Script]
https://cdn.jsdelivr.net/gh/Tartarus2014/Loon-Script@master/Task.conf, tag=Task任务集, enabled=false
https://cdn.jsdelivr.net/gh/Tartarus2014/Loon-Script@master/JD.conf, tag=京东任务, enabled=false
https://cdn.jsdelivr.net/gh/Tartarus2014/Loon-Script@master/Script.conf, tag=订阅脚本, enabled=true
# https://example.com/loon.js, tag=scripts, enable=true

[Plugin]
https://cdn.jsdelivr.net/gh/Tartarus2014/Loon-Script@master/Plugin/Netease%20Music.plugin, tag=网易云, enabled=true
https://gitee.com/chavyleung/scripts/raw/master/box/rewrite/boxjs.rewrite.loon.tf.plugin, tag=BoxJs, enabled=true
https://cdn.jsdelivr.net/gh/Tartarus2014/Loon-Script@master/Plugin/TF-Download.plugin, tag=TF软件更新, enabled=true
https://cdn.jsdelivr.net/gh/Peng-YM/Sub-Store@master/config/Loon.plugin, tag=Sub_store, enabled=false
# plugin-url tag=tag,proxy=插件中PROXY所指向的策略,enable=true
# plugin策略可设置为DIRECT,REJECT,PROXY，其中PROXY为用户在app中手动映射的策略，rule后不跟随策略默认使用PROXY
# example: https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Rewrite/AutoRewrite_Example.list,tag=boxjs,enable=true

[MITM]
skip-server-cert-verify = false
hostname = raw.githubusercontent.com
enable = true
#可以到配置文件skip-server-cert-verify
#ca-p12 =
#ca-passphrase =
